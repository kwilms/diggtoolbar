/***** BEGIN LICENSE BLOCK *****

The contents of this file are subject to the Mozilla Public License
Version 1.1 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at
http://www.mozilla.org/MPL/

Software distributed under the License is distributed on an "AS IS"
basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
License for the specific language governing rights and limitations
under the License.

The Original Code is GLaxstar Ltd code.

The Initial Developer of the Original Code is Glaxstar Ltd.
Portions created by the Initial Developer are
Copyright (C) 2008 Digg Inc. All Rights Reserved.

Contributor(s):
  Jose Enrique Bolanos <jose@glaxstar.com>
  Andres Hernandez <andres@glaxstar.com>
  Erik van Eykelen <erik@glaxstar.com>

***** END LICENSE BLOCK *****/

#include "nsISupports.idl"
interface gsIDiggEvent;

/**
 * Manages events stored in the database.
 */
[scriptable, uuid(F9B6FD93-DB1B-416E-BB8E-74B530C7E365)]
interface gsIDiggEventDAO : nsISupports
{
  /**
   * Inserts an event in the database.
   * @param aEvent The event object to be inserted.
   * @return True if the event was inserted, false otherwise.
   * @throws Exception if the event is invalid.
   */
  boolean insertEvent(in gsIDiggEvent aEvent);

  /**
   * Deletes an event from the database.
   * @param aEvent The event to be deleted.
   * @throws Exception if aEvent is invalid.
   */
  void deleteEvent(in gsIDiggEvent aEvent);

  /**
   * Obtains the event object at the given index.
   * @param aIndex The index of the event to obtain.
   * @return The event at the given index. Null if no event is found.
   */
  gsIDiggEvent getEventAtIndex(in short aIndex);

  /**
   * Obtains the current number of events stored in the database.
   * @return The number of events.
   */
  unsigned short getEventCount();

  /**
   * Truncates the event table from the database.
   */
  void clearEvents();
};
